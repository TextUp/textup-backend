Incoming @RecordText@s, like all other requests from Twilio, are handled starting in the @PublicRecordController@. This controller specifies handler methods for various types of requests. A complete list of all possible incoming types of events for text messages can found by looking at the source code of @PublicRecordController@ or by consulting the list of contacts defined in @Constants.groovy@. 

Incoming @RecordText@s are first checked to see if their destination number corresponds to a valid TextUp @Phone@ that is currently in service. While outgoing text helper methods are stored in @TextService@, depending on what type of @Phone@ is found to match the destination number of the incoming request, the @PublicRecordController@ defers to either the @StaffTextService@ or @TeamTextService@ to handle behaviors specific to each type of @Phone@. For @Staff@ members, a special case is when the @Staff@ member texts from personal phone to TextUp phone. In this case, we reply with a message indicating the current account availability. A more fully-fleshed out array of options may be available in the future. For @Team@s, we also need to handle allowing clients to sign up for text announcements and the display of currently featured announcements. 